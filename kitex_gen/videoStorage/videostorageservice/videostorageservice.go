// Code generated by Kitex v0.4.4. DO NOT EDIT.

package videostorageservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	"runedance_douyin/kitex_gen/videoStorage"
)

func serviceInfo() *kitex.ServiceInfo {
	return videoStorageServiceServiceInfo
}

var videoStorageServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "VideoStorageService"
	handlerType := (*videostorage.VideoStorageService)(nil)
	methods := map[string]kitex.MethodInfo{
		"uploadVideoToDB": kitex.NewMethodInfo(uploadVideoToDBHandler, newVideoStorageServiceUploadVideoToDBArgs, newVideoStorageServiceUploadVideoToDBResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "videostorage",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func uploadVideoToDBHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*videostorage.VideoStorageServiceUploadVideoToDBArgs)
	realResult := result.(*videostorage.VideoStorageServiceUploadVideoToDBResult)
	success, err := handler.(videostorage.VideoStorageService).UploadVideoToDB(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = &success
	return nil
}
func newVideoStorageServiceUploadVideoToDBArgs() interface{} {
	return videostorage.NewVideoStorageServiceUploadVideoToDBArgs()
}

func newVideoStorageServiceUploadVideoToDBResult() interface{} {
	return videostorage.NewVideoStorageServiceUploadVideoToDBResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) UploadVideoToDB(ctx context.Context, req *videostorage.VideoStorageUploadRequest) (r string, err error) {
	var _args videostorage.VideoStorageServiceUploadVideoToDBArgs
	_args.Req = req
	var _result videostorage.VideoStorageServiceUploadVideoToDBResult
	if err = p.c.Call(ctx, "uploadVideoToDB", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
